import "standard/gl.rf";
import "standard/glfw.rf";
import "standard/io.rf";

int main() {
    using GLFW;
    using GL;
    
    glfwInit();
    
    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
    
    GLFWwindow* window = glfwCreateWindow(1080, 720, "Boo", nullptr, nullptr);
    
    glfwMakeContextCurrent(window);
    gladLoadGL();
    glClearColor(0.2f, 0.3f, 0.8f, 1.0f);
    
    GLuint vao;
    glGenVertexArrays(1, &vao);
    glBindVertexArray(vao);
    
    float[] data = {
        -0.5f, -0.5f,
        0.5f, -0.5f,
        0.0f, 0.5f
    };
    
    GLuint vbo;
    glGenBuffers(1, &vbo);
    glBindBuffer(BufferTarget.GL_ARRAY_BUFFER, vbo);
    glBufferData(BufferTarget.GL_ARRAY_BUFFER, sizeof(data), data, BufferUsageHint.GL_STATIC_DRAW);
    glVertexAttribPointer(0, 2, Datatype.GL_FLOAT, GL_FALSE, 2 * sizeof(float), (void*)0);
    glEnableVertexAttribArray(0);
    
    while (!glfwWindowShouldClose(window)) {
        glfwPollEvents();
        
        glClear(BufferBits.GL_COLOR_BUFFER_BIT);
        glDrawArrays(Primitive.GL_TRIANGLES, 0, 3);
        
        glfwSwapBuffers(window);
    }
    
    glfwDestroyWindow(window);
    glfwTerminate();
    return 0;
}
